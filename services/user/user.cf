bundle agent user {
  vars:
    "idealcoder" data => '{
        "user": "idealcoder",
        "groups": ["sudo", "adm", "dip", "netdev", "sshuser"],
        "sshkeys": ["ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDKu7k5izwBCa8YNqrzmtCNwWyFlY0GLQu9lRgDqE5INzXed0AKodeS4ihBvbO+hwKNLnGhBxKlqEJB8M9I+ElC4qQeCQBtrcGzFG02QGyJVriPXSiLCybLZFQISauBEzReHb0+UC1KZSdVh1dnVw4OHmhpM3L4fIOF3b4WUHSHyp/uHLtcYcfpZesi1EKFXzFRWfjUrqu2ie4OhX0PAs0i4ZZOuIdbK6pw4JmRyei57afpVKCbUxPQ6vxnXXXitL8I7D8nNsXIVYhfQlvBLSc8EN9V4lVWiloPBnmn0pYuZKsUPn3C4Vhgk1bgOEvHXiOvokzXINcVgTfzxPbzIKKHDDkzaz2f4dKxe4FL2FkjU3xPpf6Ns2ygiqbiIrcBw/aveK2BZMP23Ei+AxLlBrtx138LjQpnytoVOii5ImsGilyrIiMnJS103MclzBaNQEcW2h8v/bkSoy9pDMxgN9GR6igaLIy+R5dzD1u8b7XSGcNhYMV+XvN6Sgf48ew5T/WKbCUvQx0Kzt9bXC3UJ6jS4LuvKyxQMN9eZ/DwVOrY0VpZP5LD7zRSSnn1APKIP0rmDQq7g/wkOhgYJqr9UcEJt+jzuNqpj9Qkv0FoYI+F/nJpzhc1wq4T+Wu8uM91IxmgRWF7WNZ4ldXN2XVPhPMR6tUPc0pkfkK/bSMkPm+B/w== idealcoder@redguppy"]
      }';

  methods: 
    "idealcoder"
      usebundle => user_present(@(idealcoder));
}

bundle agent user_present(data) {
  vars:
    "user"    string => "$(data[user])";
    "groups"  slist => getvalues("data[groups]");
    "sshkeys" slist  => getvalues("data[sshkeys]");

  classes:
    "user_exists" expression => userexists("$(user)");

  commands:
    !user_exists::
      "/usr/sbin/adduser"
        arglist => { "--quiet"
	        , "--shell /bin/zsh"
		, "--add_extra_groups"
		, "--disabled-login"
		, "--gecos ''"
		, "$(user)"},
	classes => if_ok("user_exists");

  methods:
    user_exists::
      "user_has_group"
        usebundle => user_has_group("$(user)","$(groups)");
      "user_has_sshkeys"
        usebundle => user_has_sshkey("$(user)","$(sshkeys)");
      "user_has_pwdless_sudo"
        usebundle => user_has_pwdless_sudo("$(user)");
}

bundle agent user_has_group(user, group) {
  vars:
    "groups_list" string => execresult("/usr/bin/groups $(user)", "noshell");

  classes:
    "group_todo" expression => regcmp("$(group)","$(groups_list)");

  methods:
    "group_present"
      # create groups on demand
      usebundle => group_present("$(group)"),
      handle => "group_present";

  commands:
    !group_todo::
      "/usr/sbin/adduser"
	depends_on => {"group_present"},
        arglist => { "--quiet"
	        , "$(user)"
		, "$(group)"};
}

bundle agent user_has_sshkey(user, sshkey) {
  files:
      # assumes home directory location
      "/home/$(user)/.ssh/authorized_keys"
        create => "true",
	acl => private("$(user)"),
        edit_line => lines_present("$(sshkey)");
}

bundle agent user_has_pwdless_sudo(user) {
  files:
    "/etc/sudoers.d/90-cfengine"
      acl => private("root"),
      edit_line => lines_present("# managed by cfengine"),
      edit_line => lines_present("$(user) ALL=(ALL) NOPASSWD:ALL");
}

bundle agent group_present(group) {
  classes:
   "group_exists" expression => groupexists("$(group)");

  commands:
    !group_exists::
      "/usr/sbin/addgroup --quiet $(group)";
}
