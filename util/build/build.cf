# @brief Build and install a program from git
#
# Using the latest tag from a git url, this makes a deb package in 
# /usr/local/share/debs/$(name)-$(version).deb using 'build.sh', and installs it. 
#
# Package is automatically rebuilt and upgraded when a new git tag is released. 
# Binaries are protected by 'unpriv.sh' from being accidentally run by a 
# privileged user.

# @param name	name of the program
# @param url	git url of the program
#
# **Example:**

# ```cf3
# methods:
#  "build" usebundle => build("mcrcon", "https://github.com/Tiiffi/mcrcon.git");
# ```
bundle agent build(name, url) {
  packages:
    "build-essential"
      policy => "present",
      classes => if_ok("build_installed");

    "checkinstall"
      policy => "present",
      classes => if_ok("checkinstall_installed");

  vars:
    "latest_version" string => 
      execresult("/usr/local/bin/git-latest-tag $(url)", "noshell");

    "current_version" string => 
      execresult("dpkg -s $(name) | grep Version | awk '{print $2}'", "useshell");

  classes:
    "new_version" not => strcmp("$(latest_version)","$(current_version)");

  commands:
    new_version&build_installed&checkinstall_installed::
      "/usr/local/bin/build-from-git $(url) /usr/local/share/deb/$(name)-$(latest_version).deb";

      "/usr/bin/apt-get install /usr/local/share/deb/$(name)-$(latest_version).deb";

  files:
      "/usr/local/share/deb/."
        create => "true",
        perms => readable("root");

      "/usr/local/bin/build-from-git"
        create => "true",
        perms => executable("root"),
        edit_template => "$(this.promise_dirname)/build-from-git.tmpl",
        template_method => "mustache";

      "/usr/local/bin/git-latest-tag"
        create => "true",
        perms => executable("root"),
        edit_template => "$(this.promise_dirname)/git-latest-tag.tmpl",
        template_method => "mustache";

      "/usr/local/bin/unpriv-only-protect"
        create => "true",
        perms => executable("root"),
        edit_template => "$(this.promise_dirname)/unpriv-only-protect.tmpl",
        template_method => "mustache";

  reports:
    "latest_version: $(latest_version),  current_version: $(current_version)";
}
